plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
    mavenLocal()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' } // Bstats, Spigot
    maven {
        url = 'https://jitpack.io/'
        metadataSources {
            artifact() //Look directly for artifact
        }
    } // PacketEvents
    maven { url = 'https://repo.viaversion.com' } // ViaVersion
    maven { url = "https://repo.aikar.co/content/groups/aikar/" } // ACF, PaperLib
    maven { url = "https://repo.essentialsx.net/releases/" } // Essentials
    maven { url = "https://nexus.scarsz.me/content/groups/public" } // Configuralize
    mavenCentral() // FastUtil, Discord-Webhooks, Log4J, Lombok
}

dependencies {
    implementation 'com.github.retrooper.packetevents:spigot:2.0-SNAPSHOT'
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'
    implementation 'org.bstats:bstats-bukkit:3.0.0'
    implementation 'club.minnced:discord-webhooks:0.8.0'
    implementation 'it.unimi.dsi:fastutil:8.5.8'
    implementation "io.papermc:paperlib:1.0.7"
    implementation 'org.jetbrains:annotations:23.0.0' // Why is this needed to compile?
    implementation 'github.scarsz:configuralize:1.4.0'

    compileOnly 'org.spigotmc:spigot-api:1.18-R0.1-SNAPSHOT'
    compileOnly 'com.viaversion:viaversion-api:4.1.1'
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    compileOnly group: 'net.essentialsx', name: 'EssentialsX', version: '2.19.2'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

group = 'ac.grim.grimac'
version = '2.2.0'
description = 'GrimAC'
java.sourceCompatibility = JavaVersion.VERSION_1_8
java.targetCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar {
    minimize()
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

build.dependsOn shadowJar